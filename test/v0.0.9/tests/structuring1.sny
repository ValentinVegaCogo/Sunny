const A: String = "hola"

fun x(a: String, b: u8) -> Option<String> {
  return Ok("ok")
}

struct Point {
  x: u8,
  y: u8
}

class Dog<T> {
  struct {
    name: String,
    other: T
  }
  impl New {}
}

model New {
  pub fun new(...) -> Self {
    return Self { ... }
  }
}

enum Operator<T> {
  Add(T, T),
  Sub {
    left: T,
    right: T
  },
  Neg(T)
}

mod Foo {
  pub const BAR: u8 = 5
}

use Foo::{ BAR as BAZ, self }